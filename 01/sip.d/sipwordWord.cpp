/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.13.2 on Sat Jul 19 17:47:08 2014
 */

#include "sipAPIword.h"

#line 8 "word.sip"
#include <word.h>
#line 12 "sip.d/sipwordWord.cpp"



extern "C" {static PyObject *meth_Word_hello_world(PyObject *, PyObject *);}
static PyObject *meth_Word_hello_world(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Word *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_Word, &sipCpp))
        {
            sipCpp->hello_world();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_Word, sipName_hello_world, NULL);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_Word(void *, const sipTypeDef *);}
static void *cast_Word(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_Word)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_Word(void *, int);}
static void release_Word(void *sipCppV,int)
{
    delete reinterpret_cast<Word *>(sipCppV);
}


extern "C" {static void assign_Word(void *, SIP_SSIZE_T, const void *);}
static void assign_Word(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<Word *>(sipDst)[sipDstIdx] = *reinterpret_cast<const Word *>(sipSrc);
}


extern "C" {static void *array_Word(SIP_SSIZE_T);}
static void *array_Word(SIP_SSIZE_T sipNrElem)
{
    return new Word[sipNrElem];
}


extern "C" {static void *copy_Word(const void *, SIP_SSIZE_T);}
static void *copy_Word(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new Word(reinterpret_cast<const Word *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_Word(sipSimpleWrapper *);}
static void dealloc_Word(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_Word(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_Word(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_Word(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    Word *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            sipCpp = new Word();

            return sipCpp;
        }
    }

    {
        const Word * a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_Word, &a0))
        {
            sipCpp = new Word(*a0);

            return sipCpp;
        }
    }

    return NULL;
}


static PyMethodDef methods_Word[] = {
    {SIP_MLNAME_CAST(sipName_hello_world), meth_Word_hello_world, METH_VARARGS, NULL}
};


sipClassTypeDef sipTypeDef_word_Word = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_Word,
        {0}
    },
    {
        sipNameNr_Word,
        {0, 0, 1},
        1, methods_Word,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    0,
    0,
    init_Word,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_Word,
    assign_Word,
    array_Word,
    copy_Word,
    release_Word,
    cast_Word,
    0,
    0,
    0
};
